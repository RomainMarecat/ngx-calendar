{"version":3,"file":"romainmarecat-ngx-calendar.umd.js.map","sources":["ng://@romainmarecat/ngx-calendar/lib/shared/event/event.ts","ng://@romainmarecat/ngx-calendar/lib/shared/util/alert.service.ts","ng://@romainmarecat/ngx-calendar/lib/calendar/calendar-body/calendar-body.component.ts","ng://@romainmarecat/ngx-calendar/lib/calendar/calendar-header/calendar-header.component.ts","ng://@romainmarecat/ngx-calendar/lib/shared/firebase/visitor.service.ts","ng://@romainmarecat/ngx-calendar/lib/shared/event/event.service.ts","ng://@romainmarecat/ngx-calendar/lib/shared/session/session.service.ts","ng://@romainmarecat/ngx-calendar/lib/calendar/calendar.component.ts","ng://@romainmarecat/ngx-calendar/lib/shared/util/routing-state.ts","ng://@romainmarecat/ngx-calendar/lib/ngx-calendar.module.ts","ng://@romainmarecat/ngx-calendar/lib/shared/session/session.ts"],"sourcesContent":["export class Event {\n  key?: string;\n  start: Date;\n  end: Date;\n  details: any;\n  comment?: string;\n  custom_title?: string;\n  group_booking?: string;\n  pause?: number;\n}\n\nexport enum EventType {\n  absence,\n  session,\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  constructor(public snackBar: MatSnackBar,\n              private translateService: TranslateService) {\n  }\n\n  message(message: string, parameters: Object = {}) {\n    this.toast(message, parameters);\n  }\n\n  show(message: string, parameters: Object = {}) {\n    this.toast(message, parameters);\n  }\n\n  toast(message: string, parameters: Object = {}) {\n    if (typeof message === 'string') {\n      // Subscribe on message translation\n      this.translateService.get(message, parameters)\n        .subscribe((translation: string) => {\n          this.openAlertMessage(translation, parameters);\n        }, (err) => {\n          this.openAlertMessage(message, parameters);\n        });\n      return;\n    }\n    this.openAlertMessage(message, parameters);\n  }\n\n  openAlertMessage(message: string, parameters: Object) {\n    // Open Alert Component with a message\n    const toastRef = this.snackBar.open(message, 'message', {\n      data: message,\n      // Add extra class to define custom css or background color\n      panelClass: ['snackbar'],\n      // Timeout duration in ms\n      duration: 8000\n    });\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport { Moment } from 'moment';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Day } from '../../shared/day/day';\nimport { EventType } from '../../shared/event/event';\nimport { OnlineSession } from '../../shared/session/online-session';\nimport { Session } from '../../shared/session/session';\nimport { AlertService } from '../../shared/util/alert.service';\n\n@Component({\n  selector: 'lib-calendar-body',\n  templateUrl: './calendar-body.component.html',\n  styleUrls: ['./calendar-body.component.scss']\n})\nexport class CalendarBodyComponent implements OnInit {\n  @Input() onlineSession: OnlineSession;\n  @Input() viewMode: String;\n  @Input() start: Moment;\n  @Input() end: Moment;\n  @Input() days: Array<Day>;\n\n  @Input() daysAvailability: Map<string, string[]>;\n  @Input() daysBusySlotNumber: Map<string, number>;\n  @Input() daysAvailabilitySlotNumber: Map<string, number>;\n  @Input() busySlots: Set<string>;\n  @Input() earlySlots: Set<string>;\n  @Input() pauseSlots: Set<string>;\n  @Input() sessionsSlots: Set<string>;\n  @Input() sessionsEndSlots: Set<string>;\n  @Input() sessions: Map<string, Session>;\n\n  @Output() sessionAdded: EventEmitter<Session> = new EventEmitter<Session>();\n  @Output() sessionRemoved: EventEmitter<{key: string, session: Session}>\n    = new EventEmitter<{key: string, session: Session}>();\n  @Output() startChanged: EventEmitter<Moment> = new EventEmitter<Moment>();\n  @Output() endChanged: EventEmitter<Moment> = new EventEmitter<Moment>();\n\n  constructor(private translate: TranslateService,\n              private alertService: AlertService) {\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * On click next day button, trigger switch start\n   */\n  onNextDay() {\n    let daysNb = 1;\n    if (this.viewMode === 'week') {\n      daysNb = 7;\n    }\n    this.start = moment(this.start).add(daysNb, 'day');\n    this.startChanged.emit(this.start);\n  }\n\n  /**\n   * If all slot is not avalaibles all all days\n   */\n  isAllSlotNotAvailable(): boolean {\n    if (this.days && this.days.length > 0) {\n      return this.days.filter((day) => this.daysAvailability.get(day.key).length > 0).length === 0;\n    }\n  }\n\n  /**\n   * All Availabilities by key: string, title: string, value: Moment\n   */\n  getAvailabilities(day: string): String[] {\n    return this.daysAvailability.get(day);\n  }\n\n  getSessionTitle(day: Day, time: string): string {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    if (this.sessions && this.sessions.has(datetime)) {\n      const session: Session = this.sessions.get(datetime);\n      return moment(session.start).format('HH:mm') + ' - ' + moment(session.end).format('HH:mm');\n    }\n    return '';\n  }\n\n  getSessionTooltip(day: Day, time: string): string {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n    if (this.sessions && this.sessions.has(datetime)) {\n      const session = this.sessions.get(datetime);\n      if (session.details.info) {\n        return this.translate.instant(session.details.info);\n      }\n    }\n\n    return '';\n  }\n\n  onTimeSlotClicked(day: Day, time: string) {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    if (this.isSlotBusy(day, time) || this.isSlotEarly(day, time)) {\n      this.alertService.show('error.slot.locked');\n      return;\n    }\n\n    if (!this.isSlotSessionStart(day, time) && !this.isSlotInSession(day, time)) {\n      const mmtStart = moment(datetime, 'YYYY-MM-DDHH:mm');\n      const mmtEnd = mmtStart.clone().add(this.onlineSession.session_type.duration, 'minutes');\n      this.addSession(mmtStart, mmtEnd);\n    } else if (this.sessions.has(datetime)) {\n      const session = this.sessions.get(datetime);\n      const source = {key: datetime, session: session};\n      this.removeSession(source);\n    }\n  }\n\n  addSession(start: Moment, end: Moment) {\n    const session: Session = {\n      start: start.toDate(),\n      end: end.toDate(),\n      pause: this.onlineSession.session_type.pause,\n      details: {\n        nb_persons: 1,\n        event_type: EventType.session,\n        info: 'calendar.session.info',\n      }\n    };\n    this.sessionAdded.emit(session);\n  }\n\n  removeSession(source: {key: string, session: Session}) {\n    this.sessionRemoved.emit(source);\n  }\n\n  /**\n   * If day is busy (occupÃ©) by current key string\n   */\n  isDayBusy(day: Day, time: string): boolean {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    return this.daysBusySlotNumber && this.daysAvailabilitySlotNumber\n      && this.daysBusySlotNumber.has(datetime) && this.daysAvailabilitySlotNumber.has(datetime)\n      && this.daysBusySlotNumber.get(datetime) >= this.daysAvailabilitySlotNumber.get(datetime);\n  }\n\n  /**\n   * If slot is busy by date\n   */\n  isSlotBusy(day: Day, time: string): boolean {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    return this.busySlots && this.busySlots.has(datetime);\n  }\n\n  /**\n   * if slot is on previous (date plus tÃ´t)\n   */\n  isSlotEarly(day: Day, time: string): boolean {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    return (this.earlySlots && this.earlySlots.has(datetime))\n      || (this.pauseSlots && this.pauseSlots.has(datetime));\n  }\n\n  /**\n   * is Slot in current activities\n   */\n  isSlotInSession(day: Day, time: string): boolean {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    return this.sessionsSlots && this.sessionsSlots.has(datetime);\n  }\n\n  isSlotSessionStart(day: Day, time: string): boolean {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    return this.sessions && this.sessions.has(datetime);\n  }\n\n  isSlotSessionEnd(day: Day, time: string): boolean {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    return this.sessionsEndSlots && this.sessionsEndSlots.has(datetime);\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Moment } from 'moment';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'lib-calendar-header',\n  templateUrl: './calendar-header.component.html',\n  styleUrls: ['./calendar-header.component.scss']\n})\nexport class CalendarHeaderComponent implements OnInit {\n  private _viewMode: String;\n  @Input() start: Moment;\n  @Input() end: Moment;\n  @Output() switchedView: EventEmitter<String> = new EventEmitter<String>();\n  @Output() startChanged: EventEmitter<Moment> = new EventEmitter<Moment>();\n\n  ngOnInit() {\n  }\n\n  @Input() set viewMode(viewMode) {\n    this.switchView(viewMode);\n  }\n\n  /**\n   * Switch current view to another\n   */\n  switchView(viewMode: String) {\n    this._viewMode = viewMode;\n    this.onSwitchedView(viewMode);\n  }\n\n  /**\n   * getter of private _viewMode\n   */\n  get viewMode(): String {\n    return this._viewMode;\n  }\n\n  /**\n   * Emitter of view\n   */\n  onSwitchedView(viewMode: String) {\n    this.switchedView.emit(viewMode);\n  }\n\n  /**\n   * Emitter of start date moment\n   */\n  onStartChanged(start: Moment) {\n    this.startChanged.emit(start);\n  }\n\n  /**\n   * return to now on start date\n   */\n  goToToday() {\n    this.start = moment();\n    this.onStartChanged(this.start);\n  }\n\n  /**\n   * Check if start is equal to today\n   */\n  isToday() {\n    return moment() === moment(this.start);\n  }\n\n  /**\n   * Go to previous day\n   */\n  previousDay() {\n    let daysNb = 1;\n    if (this.viewMode === 'week') {\n      daysNb = 7;\n    }\n    this.start = moment(this.start).subtract(daysNb, 'day');\n    this.onStartChanged(this.start);\n  }\n\n  /**\n   * Go to new day\n   */\n  nextDay() {\n    let daysNb = 1;\n    if (this.viewMode === 'week') {\n      daysNb = 7;\n    }\n    this.start = moment(this.start).add(daysNb, 'day');\n    this.onStartChanged(this.start);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n  CollectionReference,\n  OrderByDirection,\n  Query,\n  WhereFilterOp\n} from '@firebase/firestore-types';\nimport {\n  Action,\n  AngularFirestore,\n  AngularFirestoreCollection,\n  DocumentChangeAction,\n  DocumentReference,\n  DocumentSnapshot\n} from '@angular/fire/firestore';\nimport { map, switchMap } from 'rxjs/operators';\n\nexport interface Document {\n  key?: string;\n  id?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisitorService {\n  collectionRef: AngularFirestoreCollection<DocumentReference>;\n  documents$: Observable<DocumentChangeAction<any>[]>;\n  document$: Observable<Document>;\n  query$: BehaviorSubject<any | null>;\n  filters$: BehaviorSubject<any[] | null>;\n  limit$: BehaviorSubject<number | null>;\n  startAt$: BehaviorSubject<string | null>;\n  startAfter$: BehaviorSubject<string | null>;\n  orderBy$: BehaviorSubject<any | null>;\n  endAt$: BehaviorSubject<string | null>;\n  endBefore$: BehaviorSubject<string | null>;\n  query: CollectionReference | Query;\n  table: string;\n\n  constructor(public afs: AngularFirestore, @Inject('TABLE_NAME') table: string) {\n    this.initializeBehaviour(table);\n    this.documents$ = combineLatest(\n      this.filters$,\n      this.limit$,\n      this.orderBy$,\n      this.query$\n    ).pipe(\n      switchMap(([filters, limit, orderBy, query]) => {\n        return this.afs.collection(this.table, (ref) => {\n          this.query = ref as CollectionReference;\n          this.createQuery(filters, limit, orderBy, query);\n          return this.query;\n        })\n          .snapshotChanges();\n      })\n    );\n  }\n\n  createQuery(filters, limit, orderBy, query) {\n    if (query && this.query) {\n      if (query.limit) {\n        this.query = this.query.limit(query.limit);\n      }\n      if (query.filters) {\n        query.filters.forEach((filter) => {\n          this.query = this.query.where(filter.column, filter.operator as WhereFilterOp, filter.value);\n        });\n      }\n      if (query.orderBy) {\n        this.query = this.query.orderBy(query.orderBy.column, query.orderBy.direction as OrderByDirection);\n      }\n    }\n\n    if (limit) {\n      this.query = this.query.limit(limit);\n    }\n    if (filters && this.query) {\n      filters.forEach((filter) => {\n        this.query = this.query.where(filter.column, filter.operator as WhereFilterOp, filter.value);\n      });\n    }\n    if (orderBy) {\n      this.query = this.query.orderBy(orderBy.column, orderBy.direction as OrderByDirection);\n    }\n  }\n\n  initializeBehaviour(table: string) {\n    this.table = table;\n    this.query$ = new BehaviorSubject(null);\n    this.filters$ = new BehaviorSubject(null);\n    this.limit$ = new BehaviorSubject(null);\n    this.orderBy$ = new BehaviorSubject(null);\n    this.collectionRef = this.afs.collection(this.table);\n  }\n\n  /**\n   * get multiple documents\n   * @return Observable\n   */\n  getDocuments(): Observable<any[]> {\n    return this.documents$.pipe(\n      map((documents) => {\n        return documents.map((document: DocumentChangeAction<any>) => {\n          if (document.payload.doc.exists) {\n            const doc = document.payload.doc.data() as Document;\n            doc.key = document.payload.doc.id;\n            return doc;\n          }\n        });\n      }));\n  }\n\n  /**\n   * get snapshot change with state, from action\n   */\n  private getDocPayload(path: string): Observable<any> {\n    return this.document$ = this.collectionRef\n      .doc(path)\n      .snapshotChanges()\n      .pipe(\n        map((action: Action<DocumentSnapshot<DocumentReference>>) => {\n          if (action.payload.exists) {\n            const product = action.payload.data() as Document;\n            product.key = action.payload.id;\n            return product;\n          }\n          return null;\n        }));\n  }\n\n  /**\n   * get a single document\n   */\n  getDocument(key: null | string): Observable<Document> {\n    if (key) {\n      return this.getDocPayload(key);\n    }\n    return of(null);\n  }\n\n  /**\n   * Update a document\n   */\n  updateDocument(document: Document): Promise<void> {\n    return this.collectionRef.doc(document.key).update({...document});\n  }\n\n  /**\n   * create a Document\n   */\n  createDocument(document: any): Promise<DocumentReference> {\n    return this.collectionRef.add(document);\n  }\n\n  /**\n   * Delete a document\n   */\n  deleteDocument(document: Document): Promise<void> {\n    return this.collectionRef.doc(document.key).delete();\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { VisitorService } from '../firebase/visitor.service';\nimport { Event } from './event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService extends VisitorService {\n\n  constructor(afs: AngularFirestore, @Inject('TABLE_EVENT') table: string) {\n    super(afs, table);\n  }\n\n  getEvents(): Observable<Event[]> {\n    return super.getDocuments() as Observable<Event[]>;\n  }\n\n  getEvent(key: string): Observable<Event> {\n    return super.getDocument(key) as Observable<Event>;\n  }\n\n  createEvent(event: Event): Promise<any> {\n    return super.createDocument(event);\n  }\n\n  updateEvent(event: Event) {\n    return super.updateDocument(event);\n  }\n\n  deleteEvent(event: Event) {\n    return super.deleteDocument(event);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { VisitorService } from '../firebase/visitor.service';\nimport { Session } from './session';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService extends VisitorService {\n\n  constructor(afs: AngularFirestore, @Inject('TABLE_SESSION') table: string) {\n    super(afs, table);\n  }\n\n  getSessions(): Observable<Session[]> {\n    return super.getDocuments() as Observable<Session[]>;\n  }\n\n  getSession(key: string): Observable<Session> {\n    return super.getDocument(key) as Observable<Session>;\n  }\n\n  createSession(session: Session): Promise<any> {\n    return super.createDocument(session);\n  }\n\n  updateSession(session: Session) {\n    return super.updateDocument(session);\n  }\n\n  deleteSession(session: Session) {\n    return super.deleteDocument(session);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChildren\n} from '@angular/core';\nimport * as moment_ from 'moment';\nimport { Moment } from 'moment';\nimport { Twix, TwixIter } from 'twix';\nimport 'twix';\nimport { Day } from '../shared/day/day';\nimport { EventService } from '../shared/event/event.service';\nimport { OnlineSession } from '../shared/session/online-session';\nimport { Session } from '../shared/session/session';\nimport { Event } from '../shared/event/event';\nimport { SessionService } from '../shared/session/session.service';\n\nconst moment = moment_;\n\n@Component({\n  // tslint:disable\n  selector: 'ngx-calendar',\n  // tslint:enable\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss']\n})\nexport class CalendarComponent implements OnInit, OnChanges {\n  // Default View Mode of Week Component\n  _viewMode: String = 'week';\n\n  @Input() onlineSession: OnlineSession;\n  @Input() start: Moment = moment();\n  @Input() end: Moment = moment();\n  @Input() slotDuration = 15;\n\n  calendarStart: Moment;\n  calendarEnd: Moment;\n  @Output() viewModeChanged: EventEmitter<String> = new EventEmitter<String>();\n  @Output() sessionCreated: EventEmitter<Session> = new EventEmitter<Session>();\n\n  @Output() sessionRemoved: EventEmitter<Session> = new EventEmitter<Session>();\n\n  @ViewChildren('dayList') el: ElementRef;\n  days: Array<Day> = [];\n\n  trueDuration: number;\n  daysAvailability: Map<string, string[]>;\n  daysBusySlotNumber: Map<string, number>;\n\n  daysAvailabilitySlotNumber: Map<string, number>;\n  events: Event[];\n  busySlots: Set<string>;\n  earlySlots: Set<string>;\n  pauseSlots: Set<string>;\n  sessionsSlots: Set<string>;\n  sessionsEndSlots: Set<string>;\n  sessions: Map<string, Session>;\n\n  static splitRangeToNextTime(slotTimeRange: TwixIter, slotDuration: number): {time: Twix, mmtTime: Moment} {\n    const time: Twix = slotTimeRange.next();\n    return {time: time, mmtTime: CalendarComponent.getMinutesDifference(moment(time.toDate()), slotDuration)};\n  }\n\n  static getMinutesDifference(mmtTime: Moment, slotDuration: number): Moment {\n    if (mmtTime.minutes() % slotDuration !== 0) {\n      mmtTime.minutes(mmtTime.minutes() - (mmtTime.minutes() % slotDuration));\n    }\n\n    return mmtTime;\n  }\n\n  constructor(private eventService: EventService,\n              private sessionService: SessionService,\n              private cd: ChangeDetectorRef,\n              private rd: Renderer2) {\n  }\n\n  ngOnInit() {\n    this.setCalendar();\n    this.setDateRange();\n  }\n\n  @Input() set viewMode(viewMode) {\n    this._viewMode = viewMode;\n    this.setViewMode();\n  }\n\n  get viewMode(): String {\n    return this._viewMode;\n  }\n\n  /**\n   * Inspect all changes\n   */\n  ngOnChanges() {\n    this.setDateRange();\n  }\n\n  /**\n   * Set Default variables\n   */\n  setCalendar() {\n    this.onlineSession = {\n      key: 'test1',\n      session_type: {\n        name: 'test1',\n        max_persons: 1,\n        booking_delay: 1,\n        duration: 60,\n        pause: 0,\n      },\n      prices: [10, 20],\n      date_range: {\n        start: '2018-01-01',\n        end: '2019-12-31',\n      },\n      time_range: {\n        start: '08:00',\n        end: '19:00',\n      }\n    };\n    this.sessionsSlots = new Set();\n    this.sessionsEndSlots = new Set();\n    this.earlySlots = new Set();\n    this.pauseSlots = new Set();\n    this.sessions = new Map();\n  }\n\n  /**\n   * Set View Mode with week, day, 3 days\n   * Init start, end,\n   *\n   */\n  setViewMode() {\n    if (this.viewMode === 'day') {\n      this.end = this.start;\n      this.calendarStart = moment(this.start).startOf('day');\n      this.calendarEnd = moment(this.end).endOf('day');\n      return;\n    } else if (this.viewMode === '3days') {\n      this.end = moment(this.start).add(2, 'days');\n      this.calendarStart = moment(this.start).startOf('day');\n      this.calendarEnd = moment(this.end).endOf('day');\n      return;\n    }\n    // Init first day week number\n    const firstDay = 0;\n    // If empty start date then start to today\n    if (!this.start) {\n      this.start = moment();\n    }\n    this.start = moment(this.start).day(firstDay);\n    this.end = moment(this.start).add(6, 'days');\n\n    this.calendarStart = moment(this.start).startOf('day');\n    this.calendarEnd = moment(this.end).endOf('day');\n  }\n\n  /**\n   * On start/viewMode changed, do a recalculate of init start, end\n   * days, daysAvailability and viewMode\n   */\n  setDateRange() {\n    this.setCalendar();\n    this.setViewMode();\n    // this.buildTrueDuration();\n    this.loadEvents(this.start, this.end);\n    this.daysAvailability = new Map();\n    const dateRange: TwixIter = this.start\n      .twix(this.end)\n      .iterate(1, 'days');\n    this.days = [];\n    // Loading all days\n    while (dateRange.hasNext()) {\n      const date: Twix = dateRange.next();\n      this.days.push({\n        title: date.format('DD/MM/YYYY'),\n        key: date.format('YYYY-MM-DD'),\n        value: moment(date.toDate())\n      });\n      this.daysAvailability.set(date.format('YYYY-MM-DD'), []);\n    }\n    this.loadAvailabilities();\n  }\n\n  /**\n   * On switch date range\n   */\n  onSwithedView(viewMode: String) {\n    this.viewModeChanged.emit(viewMode);\n    this.setDateRange();\n  }\n\n  /**\n   * On start change event\n   */\n  onStartChanged(start: Moment) {\n    this.start = start;\n    this.setDateRange();\n  }\n\n  /**\n   * On session added on click event\n   */\n  onSessionAdded(session: Session) {\n    this.sessions.set(moment(session.start).format('YYYY-MM-DDHH:mm'), session);\n    this.addSession(session);\n    this.sessionCreated.emit(session);\n  }\n\n  /**\n   * On removed event\n   */\n  onSessionRemoved(source: {key: string, session: Session}) {\n    this.sessions.delete(source.key);\n    this.removeSession(source.session);\n    this.sessionRemoved.emit(source.session);\n  }\n\n  /**\n   * Load all time for each days\n   */\n  loadAvailabilities() {\n    // no online session no calendar\n    if (!this.daysAvailability || !this.onlineSession) {\n      return;\n    }\n    // session duration\n    const duration = this.onlineSession.session_type.duration;\n    // session day start 00:00 - end 23:59\n    const onlineSessionStart: Moment = moment(this.onlineSession.date_range.start, 'YYYY-MM-DD').startOf('day');\n    const onlineSessionEnd: Moment = moment(this.onlineSession.date_range.end, 'YYYY-MM-DD').endOf('day');\n    this.daysAvailabilitySlotNumber = new Map();\n    this.daysAvailability.forEach((avbs, day) => {\n      let slotsNumber = 0;\n      // each day of days availability with start time 08:00\n      const mmtDay = moment(day, 'YYYY-MM-DD').hour(8);\n      const mmtDayStartTime = moment(day + this.onlineSession.time_range.start, 'YYYY-MMDDHH:mm');\n\n      // If session start time like 08:00 is before start today 00:00\n      if (mmtDayStartTime.isBefore(moment().startOf('day'))) {\n        return;\n      }\n      // booking delay\n      const minMmtStartTime = moment().add(this.onlineSession.session_type.booking_delay, 'hours');\n      // session time end\n      const mmtDayEndTime = moment(day + this.onlineSession.time_range.end, 'YYYY-MM-DDHH:mm');\n      mmtDayEndTime.subtract(duration, 'minutes');\n      // slots iterator\n      const timeRange: TwixIter = mmtDayStartTime.twix(mmtDayEndTime).iterate(this.slotDuration, 'minutes');\n      if (this.calendarStart && this.calendarEnd && mmtDay.isBetween(onlineSessionStart, onlineSessionEnd)) {\n        while (timeRange.hasNext()) {\n          const time: Twix = timeRange.next();\n          const timeMmt: Moment = moment(time.toDate());\n          if (!timeMmt.isBefore(minMmtStartTime)) {\n            avbs.push(time.format('HH:mm'));\n            slotsNumber++;\n          }\n        }\n      }\n      this.daysAvailabilitySlotNumber.set(day, slotsNumber);\n    });\n  }\n\n  /**\n   * Add session event in calendar\n   */\n  addSession(session: Session) {\n    const mmtStart = moment(session.start);\n    const mmtEnd = moment(session.end);\n    const timeInnerRange: TwixIter = mmtStart.twix(mmtEnd).iterateInner(this.slotDuration, 'minutes');\n    while (timeInnerRange.hasNext()) {\n      const time: Twix = timeInnerRange.next();\n      this.sessionsSlots.add(time.format('YYYY-MM-DDHH:mm'));\n      if (!timeInnerRange.hasNext()) {\n        this.sessionsEndSlots.add(time.format('YYYY-MM-DDHH:mm'));\n      }\n    }\n    /* building earliest slot before event */\n    const mmtEarlyStart = mmtStart.clone().subtract(this.trueDuration, 'minutes');\n    mmtEarlyStart.minutes(mmtEarlyStart.minutes() - (mmtEarlyStart.minutes() % this.slotDuration) + this.slotDuration);\n    const timeEarlierRange: TwixIter = mmtEarlyStart.twix(mmtStart).iterate(this.slotDuration, 'minutes');\n    while (timeEarlierRange.hasNext()) {\n      const time: Twix = timeEarlierRange.next();\n      const mmtTime: Moment = CalendarComponent.getMinutesDifference(moment(time.toDate()), this.slotDuration);\n      if (mmtTime.isSameOrAfter(mmtEarlyStart) && mmtTime.isBefore(mmtStart)) {\n        this.earlySlots.add(mmtTime.format('YYYY-MM-DDHH:mm'));\n      }\n    }\n    /* building pause slots after event */\n    const mmtEarlyEnd = mmtEnd.clone();\n    mmtEarlyEnd.subtract(mmtEarlyEnd.minutes() % this.slotDuration);\n    const mmtPauseEnd = mmtEarlyEnd.clone().add(this.onlineSession.session_type.pause, 'minutes');\n    const timePauseRange: TwixIter = mmtEarlyEnd.twix(mmtPauseEnd).iterate(this.slotDuration, 'minutes');\n    while (timePauseRange.hasNext()) {\n      const time: Twix = timePauseRange.next();\n      const mmtTime: Moment = CalendarComponent.getMinutesDifference(moment(time.toDate()), this.slotDuration);\n      if (mmtTime.isSameOrAfter(mmtEarlyEnd) && mmtTime.isBefore(mmtPauseEnd)) {\n        this.pauseSlots.add(mmtTime.format('YYYY-MM-DDHH:mm'));\n      }\n    }\n  }\n\n  /**\n   * Remove session event in Calendar\n   */\n  removeSession(session: Session) {\n    const mmtStart = moment(session.start);\n    const mmtEnd = moment(session.end);\n    const timeInnerRange: TwixIter = mmtStart.twix(mmtEnd).iterate(this.slotDuration, 'minutes');\n    while (timeInnerRange.hasNext()) {\n      const time: Twix = timeInnerRange.next();\n      this.sessionsSlots.delete(time.format('YYYY-MM-DDHH:mm'));\n      if (!timeInnerRange.hasNext()) {\n        this.sessionsEndSlots.delete(time.format('YYYY-MM-DDHH:mm'));\n      }\n    }\n    /* removing early slots */\n    const mmtEarlyStart = mmtStart.clone().subtract(this.trueDuration, 'minutes');\n    mmtEarlyStart.minutes(mmtEarlyStart.minutes() - (mmtEarlyStart.minutes() % this.slotDuration) + this.slotDuration);\n    const timeEarlyRange: TwixIter = mmtEarlyStart.twix(mmtStart).iterate(this.slotDuration, 'minutes');\n    while (timeEarlyRange.hasNext()) {\n      const time: Twix = timeEarlyRange.next();\n      const mmtTime: Moment = CalendarComponent.getMinutesDifference(moment(time.toDate()), this.slotDuration);\n      if (mmtTime.isSameOrAfter(mmtEarlyStart) && mmtTime.isBefore(mmtStart)) {\n        this.earlySlots.delete(mmtTime.format('YYYY-MM-DDHH:mm'));\n      }\n    }\n    /* removing pause slots */\n    if (session.pause) {\n      const mmtEarlyEnd = mmtEnd.clone();\n      mmtEarlyEnd.subtract(mmtEarlyEnd.minutes() % this.slotDuration);\n      const mmtPauseEnd = mmtEarlyEnd.clone().add(session.pause, 'minutes');\n      const timePauseRange: TwixIter = mmtEarlyEnd.twix(mmtPauseEnd).iterate(this.slotDuration, 'minutes');\n      while (timePauseRange.hasNext()) {\n        const time: Twix = timePauseRange.next();\n        const mmtTime: Moment = CalendarComponent.getMinutesDifference(moment(time.toDate()), this.slotDuration);\n        if (mmtTime.isSameOrAfter(mmtEarlyEnd) && mmtTime.isBefore(mmtPauseEnd)) {\n          this.pauseSlots.delete(mmtTime.format('YYYY-MM-DDHH:mm'));\n        }\n      }\n    }\n  }\n\n  /************************************************\n   ******************* Date functions **************\n   *************************************************/\n\n  loadEvents(start: Moment, end: Moment) {\n    this.sessionService.filters$.next([\n      {\n        column: 'start',\n        operator: '>=',\n        value: moment(start).toDate()\n      }\n    ]);\n    this.sessionService.getSessions()\n      .subscribe((events: Session[]) => {\n        this.events = [...events.filter((event) => event && event.end <= end.toDate())];\n        this.busySlots = new Set();\n        this.daysBusySlotNumber = new Map();\n\n        this.events.forEach((event: Event) => {\n          let mmtEventStart = moment(event.start, 'YYYY-MM-DDHH:mm');\n          mmtEventStart = this.buildinBusySlot(mmtEventStart, event);\n          this.buildingEarliestSlot(mmtEventStart);\n        });\n\n        this.cd.markForCheck();\n      });\n  }\n\n  buildinBusySlot(mmtEventStart: Moment, event: Event): Moment {\n    const mmtEventEnd = moment(event.end, 'YYYY-MM-DDHH:mm');\n    if (!mmtEventStart || !mmtEventStart.isValid()\n      || !mmtEventEnd || !mmtEventEnd.isValid()\n      || !mmtEventStart.isBefore(mmtEventEnd)) {\n      console.error('invalid dates');\n      return null;\n    }\n    /* building busy slots by events*/\n    const eventsTimeRange: TwixIter = mmtEventStart.twix(mmtEventEnd).iterate(this.slotDuration, 'minutes');\n    while (eventsTimeRange.hasNext()) {\n      const {time, mmtTime} = CalendarComponent.splitRangeToNextTime(eventsTimeRange, this.slotDuration);\n      /* IF the busy slot is in availability and not already in busySloits we count it */\n      if (this.daysAvailability && this.daysAvailability.has(time.format('YYYY-MM-DD'))\n        && !this.busySlots.has(time.format('YYYY-MM-DDHH:mm'))\n        && this.daysAvailability.get(time.format('YYYY-MM-DD')).indexOf(time.format('HH:mm')) >= 0) {\n        let dayBusyNumber = this.daysBusySlotNumber.has(time.format('YYYY-MM-DD')) ?\n          this.daysBusySlotNumber.get(time.format('YYYY-MM-DD')) : 0;\n        dayBusyNumber++;\n        this.daysBusySlotNumber.set(time.format('YYYY-MM-DD'), dayBusyNumber);\n      }\n      this.busySlots.add(time.format('YYYY-MM-DDHH:mm'));\n    }\n\n    return mmtEventStart;\n  }\n\n  buildingEarliestSlot(mmtEventStart: Moment) {\n    /* building earliest slot before event */\n    const mmtEarlyStart = mmtEventStart.clone().subtract(this.trueDuration, 'minutes');\n    mmtEarlyStart.minutes(mmtEarlyStart.minutes() -\n      (mmtEarlyStart.minutes() % this.slotDuration) + this.slotDuration);\n    const earliestTimeRange: TwixIter = mmtEarlyStart.twix(mmtEventStart).iterate(this.slotDuration, 'minutes');\n    while (earliestTimeRange.hasNext()) {\n      const {time, mmtTime} = CalendarComponent.splitRangeToNextTime(earliestTimeRange, this.slotDuration);\n      /* IF the busy slot is in availability and not already in busySloits we count it */\n      if (this.daysAvailability && this.daysAvailability.has(time.format('YYYY-MM-DD'))\n        && !this.busySlots.has(time.format('YYYY-MM-DDHH:mm'))\n        && this.daysAvailability.get(time.format('YYYY-MM-DD')).indexOf(time.format('HH:mm')) >= 0) {\n        let dayBusyNumber = this.daysBusySlotNumber.has(time.format('YYYY-MM-DD')) ?\n          this.daysBusySlotNumber.get(time.format('YYYY-MM-DD')) : 0;\n        dayBusyNumber++;\n        this.daysBusySlotNumber.set(time.format('YYYY-MM-DD'), dayBusyNumber);\n      }\n      this.busySlots.add(time.format('YYYY-MM-DDHH:mm'));\n    }\n  }\n}\n","import { NavigationEnd, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutingState {\n  private history = [];\n\n  constructor(private router: Router) {\n  }\n\n  public loadRouting(): void {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(({urlAfterRedirects}: NavigationEnd) => {\n        this.history = [...this.history, urlAfterRedirects];\n      });\n  }\n\n  public getHistory(): string[] {\n    return this.history;\n  }\n\n  public getPreviousUrl(): string {\n    return this.history[this.history.length - 2] || '/';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatIconModule,\n  MatTableModule,\n  MatTooltipModule\n} from '@angular/material';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CalendarBodyComponent } from './calendar/calendar-body/calendar-body.component';\nimport { CalendarHeaderComponent } from './calendar/calendar-header/calendar-header.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { EventService } from './shared/event/event.service';\nimport { SessionService } from './shared/session/session.service';\nimport { AlertService } from './shared/util/alert.service';\nimport { RoutingState } from './shared/util/routing-state';\n\nexport const TABLE_EVENT = new InjectionToken<string>('event');\nexport const TABLE_SESSION = new InjectionToken<string>('session');\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatIconModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [\n    CalendarComponent,\n    CalendarHeaderComponent,\n    CalendarBodyComponent,\n  ],\n  exports: [\n    CalendarComponent,\n    CalendarHeaderComponent,\n    CalendarBodyComponent,\n  ],\n  providers: [\n    AlertService,\n    RoutingState,\n    {provide: TABLE_SESSION, useValue: 'session'},\n    {provide: TABLE_EVENT, useValue: 'event'},\n    {provide: EventService, useClass: EventService, deps: [AngularFirestore, TABLE_EVENT]},\n    {provide: SessionService, useClass: SessionService, deps: [AngularFirestore, TABLE_SESSION]},\n  ]\n})\nexport class NgxCalendarModule {\n}\n","import { EventType, Event } from '../../shared/event/event';\n\nexport class Session extends Event {\n  details: {\n    event_type: EventType,\n    nb_persons: number,\n    booking?: any;\n    info: string;\n    // age?: Parameter;\n    // level?: Parameter;\n    // sport: Sport;\n    // speciality?: Sport;\n    // city: City;\n    // meeting_point?: MeetingPoint;\n    customers?: string[];\n  };\n}\n"],"names":["Injectable","MatSnackBar","TranslateService","EventEmitter","Component","Input","Output","moment","combineLatest","switchMap","BehaviorSubject","map","of","AngularFirestore","Inject","__extends","ChangeDetectorRef","Renderer2","ViewChildren","filter","NavigationEnd","Router","InjectionToken","NgModule","CommonModule","FlexLayoutModule","MatTooltipModule","MatButtonModule","MatCardModule","MatTableModule","MatIconModule","TranslateModule"],"mappings":"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"}
