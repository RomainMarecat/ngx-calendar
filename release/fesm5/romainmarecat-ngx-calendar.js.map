{"version":3,"file":"romainmarecat-ngx-calendar.js.map","sources":["ng://@romainmarecat/ngx-calendar/lib/shared/event/event.ts","ng://@romainmarecat/ngx-calendar/lib/shared/util/alert.service.ts","ng://@romainmarecat/ngx-calendar/lib/calendar/calendar-body/calendar-body.component.ts","ng://@romainmarecat/ngx-calendar/lib/calendar/calendar-header/calendar-header.component.ts","ng://@romainmarecat/ngx-calendar/lib/shared/firebase/visitor.service.ts","ng://@romainmarecat/ngx-calendar/lib/shared/event/event.service.ts","ng://@romainmarecat/ngx-calendar/lib/shared/session/session.service.ts","ng://@romainmarecat/ngx-calendar/lib/calendar/calendar.component.ts","ng://@romainmarecat/ngx-calendar/lib/shared/util/routing-state.ts","ng://@romainmarecat/ngx-calendar/lib/ngx-calendar.module.ts","ng://@romainmarecat/ngx-calendar/lib/shared/session/session.ts"],"sourcesContent":["export class Event {\n  key?: string;\n  start: Date;\n  end: Date;\n  details: any;\n  comment?: string;\n  custom_title?: string;\n  group_booking?: string;\n  pause?: number;\n}\n\nexport enum EventType {\n  absence,\n  session,\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  constructor(public snackBar: MatSnackBar,\n              private translateService: TranslateService) {\n  }\n\n  message(message: string, parameters: Object = {}) {\n    this.toast(message, parameters);\n  }\n\n  show(message: string, parameters: Object = {}) {\n    this.toast(message, parameters);\n  }\n\n  toast(message: string, parameters: Object = {}) {\n    if (typeof message === 'string') {\n      // Subscribe on message translation\n      this.translateService.get(message, parameters)\n        .subscribe((translation: string) => {\n          this.openAlertMessage(translation, parameters);\n        }, (err) => {\n          this.openAlertMessage(message, parameters);\n        });\n      return;\n    }\n    this.openAlertMessage(message, parameters);\n  }\n\n  openAlertMessage(message: string, parameters: Object) {\n    // Open Alert Component with a message\n    const toastRef = this.snackBar.open(message, 'message', {\n      data: message,\n      // Add extra class to define custom css or background color\n      panelClass: ['snackbar'],\n      // Timeout duration in ms\n      duration: 8000\n    });\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport { Moment } from 'moment';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Day } from '../../shared/day/day';\nimport { EventType } from '../../shared/event/event';\nimport { OnlineSession } from '../../shared/session/online-session';\nimport { Session } from '../../shared/session/session';\nimport { AlertService } from '../../shared/util/alert.service';\n\n@Component({\n  selector: 'lib-calendar-body',\n  templateUrl: './calendar-body.component.html',\n  styleUrls: ['./calendar-body.component.scss']\n})\nexport class CalendarBodyComponent implements OnInit {\n  @Input() onlineSession: OnlineSession;\n  @Input() viewMode: String;\n  @Input() start: Moment;\n  @Input() end: Moment;\n  @Input() days: Array<Day>;\n\n  @Input() daysAvailability: Map<string, string[]>;\n  @Input() daysBusySlotNumber: Map<string, number>;\n  @Input() daysAvailabilitySlotNumber: Map<string, number>;\n  @Input() busySlots: Set<string>;\n  @Input() earlySlots: Set<string>;\n  @Input() pauseSlots: Set<string>;\n  @Input() sessionsSlots: Set<string>;\n  @Input() sessionsEndSlots: Set<string>;\n  @Input() sessions: Map<string, Session>;\n\n  @Output() sessionAdded: EventEmitter<Session> = new EventEmitter<Session>();\n  @Output() sessionRemoved: EventEmitter<{key: string, session: Session}>\n    = new EventEmitter<{key: string, session: Session}>();\n  @Output() startChanged: EventEmitter<Moment> = new EventEmitter<Moment>();\n  @Output() endChanged: EventEmitter<Moment> = new EventEmitter<Moment>();\n\n  constructor(private translate: TranslateService,\n              private alertService: AlertService) {\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * On click next day button, trigger switch start\n   */\n  onNextDay() {\n    let daysNb = 1;\n    if (this.viewMode === 'week') {\n      daysNb = 7;\n    }\n    this.start = moment(this.start).add(daysNb, 'day');\n    this.startChanged.emit(this.start);\n  }\n\n  /**\n   * If all slot is not avalaibles all all days\n   */\n  isAllSlotNotAvailable(): boolean {\n    if (this.days && this.days.length > 0) {\n      return this.days.filter((day) => this.daysAvailability.get(day.key).length > 0).length === 0;\n    }\n  }\n\n  /**\n   * All Availabilities by key: string, title: string, value: Moment\n   */\n  getAvailabilities(day: string): String[] {\n    return this.daysAvailability.get(day);\n  }\n\n  getSessionTitle(day: Day, time: string): string {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    if (this.sessions && this.sessions.has(datetime)) {\n      const session: Session = this.sessions.get(datetime);\n      return moment(session.start).format('HH:mm') + ' - ' + moment(session.end).format('HH:mm');\n    }\n    return '';\n  }\n\n  getSessionTooltip(day: Day, time: string): string {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n    if (this.sessions && this.sessions.has(datetime)) {\n      const session = this.sessions.get(datetime);\n      if (session.details.info) {\n        return this.translate.instant(session.details.info);\n      }\n    }\n\n    return '';\n  }\n\n  onTimeSlotClicked(day: Day, time: string) {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    if (this.isSlotBusy(day, time) || this.isSlotEarly(day, time)) {\n      this.alertService.show('error.slot.locked');\n      return;\n    }\n\n    if (!this.isSlotSessionStart(day, time) && !this.isSlotInSession(day, time)) {\n      const mmtStart = moment(datetime, 'YYYY-MM-DDHH:mm');\n      const mmtEnd = mmtStart.clone().add(this.onlineSession.session_type.duration, 'minutes');\n      this.addSession(mmtStart, mmtEnd);\n    } else if (this.sessions.has(datetime)) {\n      const session = this.sessions.get(datetime);\n      const source = {key: datetime, session: session};\n      this.removeSession(source);\n    }\n  }\n\n  addSession(start: Moment, end: Moment) {\n    const session: Session = {\n      start: start.toDate(),\n      end: end.toDate(),\n      pause: this.onlineSession.session_type.pause,\n      details: {\n        nb_persons: 1,\n        event_type: EventType.session,\n        info: 'calendar.session.info',\n      }\n    };\n    this.sessionAdded.emit(session);\n  }\n\n  removeSession(source: {key: string, session: Session}) {\n    this.sessionRemoved.emit(source);\n  }\n\n  /**\n   * If day is busy (occupÃ©) by current key string\n   */\n  isDayBusy(day: Day, time: string): boolean {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    return this.daysBusySlotNumber && this.daysAvailabilitySlotNumber\n      && this.daysBusySlotNumber.has(datetime) && this.daysAvailabilitySlotNumber.has(datetime)\n      && this.daysBusySlotNumber.get(datetime) >= this.daysAvailabilitySlotNumber.get(datetime);\n  }\n\n  /**\n   * If slot is busy by date\n   */\n  isSlotBusy(day: Day, time: string): boolean {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    return this.busySlots && this.busySlots.has(datetime);\n  }\n\n  /**\n   * if slot is on previous (date plus tÃ´t)\n   */\n  isSlotEarly(day: Day, time: string): boolean {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    return (this.earlySlots && this.earlySlots.has(datetime))\n      || (this.pauseSlots && this.pauseSlots.has(datetime));\n  }\n\n  /**\n   * is Slot in current activities\n   */\n  isSlotInSession(day: Day, time: string): boolean {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    return this.sessionsSlots && this.sessionsSlots.has(datetime);\n  }\n\n  isSlotSessionStart(day: Day, time: string): boolean {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    return this.sessions && this.sessions.has(datetime);\n  }\n\n  isSlotSessionEnd(day: Day, time: string): boolean {\n    const datetime: string = day.value.format('YYYY-MM-DD') + time;\n\n    return this.sessionsEndSlots && this.sessionsEndSlots.has(datetime);\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Moment } from 'moment';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'lib-calendar-header',\n  templateUrl: './calendar-header.component.html',\n  styleUrls: ['./calendar-header.component.scss']\n})\nexport class CalendarHeaderComponent implements OnInit {\n  private _viewMode: String;\n  @Input() start: Moment;\n  @Input() end: Moment;\n  @Output() switchedView: EventEmitter<String> = new EventEmitter<String>();\n  @Output() startChanged: EventEmitter<Moment> = new EventEmitter<Moment>();\n\n  ngOnInit() {\n  }\n\n  @Input() set viewMode(viewMode) {\n    this.switchView(viewMode);\n  }\n\n  /**\n   * Switch current view to another\n   */\n  switchView(viewMode: String) {\n    this._viewMode = viewMode;\n    this.onSwitchedView(viewMode);\n  }\n\n  /**\n   * getter of private _viewMode\n   */\n  get viewMode(): String {\n    return this._viewMode;\n  }\n\n  /**\n   * Emitter of view\n   */\n  onSwitchedView(viewMode: String) {\n    this.switchedView.emit(viewMode);\n  }\n\n  /**\n   * Emitter of start date moment\n   */\n  onStartChanged(start: Moment) {\n    this.startChanged.emit(start);\n  }\n\n  /**\n   * return to now on start date\n   */\n  goToToday() {\n    this.start = moment();\n    this.onStartChanged(this.start);\n  }\n\n  /**\n   * Check if start is equal to today\n   */\n  isToday() {\n    return moment() === moment(this.start);\n  }\n\n  /**\n   * Go to previous day\n   */\n  previousDay() {\n    let daysNb = 1;\n    if (this.viewMode === 'week') {\n      daysNb = 7;\n    }\n    this.start = moment(this.start).subtract(daysNb, 'day');\n    this.onStartChanged(this.start);\n  }\n\n  /**\n   * Go to new day\n   */\n  nextDay() {\n    let daysNb = 1;\n    if (this.viewMode === 'week') {\n      daysNb = 7;\n    }\n    this.start = moment(this.start).add(daysNb, 'day');\n    this.onStartChanged(this.start);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport {\n  CollectionReference,\n  OrderByDirection,\n  Query,\n  WhereFilterOp\n} from '@firebase/firestore-types';\nimport {\n  Action,\n  AngularFirestore,\n  AngularFirestoreCollection,\n  DocumentChangeAction,\n  DocumentReference,\n  DocumentSnapshot\n} from '@angular/fire/firestore';\nimport { map, switchMap } from 'rxjs/operators';\n\nexport interface Document {\n  key?: string;\n  id?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VisitorService {\n  collectionRef: AngularFirestoreCollection<DocumentReference>;\n  documents$: Observable<DocumentChangeAction<any>[]>;\n  document$: Observable<Document>;\n  query$: BehaviorSubject<any | null>;\n  filters$: BehaviorSubject<any[] | null>;\n  limit$: BehaviorSubject<number | null>;\n  startAt$: BehaviorSubject<string | null>;\n  startAfter$: BehaviorSubject<string | null>;\n  orderBy$: BehaviorSubject<any | null>;\n  endAt$: BehaviorSubject<string | null>;\n  endBefore$: BehaviorSubject<string | null>;\n  query: CollectionReference | Query;\n  table: string;\n\n  constructor(public afs: AngularFirestore, @Inject('TABLE_NAME') table: string) {\n    this.initializeBehaviour(table);\n    this.documents$ = combineLatest(\n      this.filters$,\n      this.limit$,\n      this.orderBy$,\n      this.query$\n    ).pipe(\n      switchMap(([filters, limit, orderBy, query]) => {\n        return this.afs.collection(this.table, (ref) => {\n          this.query = ref as CollectionReference;\n          this.createQuery(filters, limit, orderBy, query);\n          return this.query;\n        })\n          .snapshotChanges();\n      })\n    );\n  }\n\n  createQuery(filters, limit, orderBy, query) {\n    if (query && this.query) {\n      if (query.limit) {\n        this.query = this.query.limit(query.limit);\n      }\n      if (query.filters) {\n        query.filters.forEach((filter) => {\n          this.query = this.query.where(filter.column, filter.operator as WhereFilterOp, filter.value);\n        });\n      }\n      if (query.orderBy) {\n        this.query = this.query.orderBy(query.orderBy.column, query.orderBy.direction as OrderByDirection);\n      }\n    }\n\n    if (limit) {\n      this.query = this.query.limit(limit);\n    }\n    if (filters && this.query) {\n      filters.forEach((filter) => {\n        this.query = this.query.where(filter.column, filter.operator as WhereFilterOp, filter.value);\n      });\n    }\n    if (orderBy) {\n      this.query = this.query.orderBy(orderBy.column, orderBy.direction as OrderByDirection);\n    }\n  }\n\n  initializeBehaviour(table: string) {\n    this.table = table;\n    this.query$ = new BehaviorSubject(null);\n    this.filters$ = new BehaviorSubject(null);\n    this.limit$ = new BehaviorSubject(null);\n    this.orderBy$ = new BehaviorSubject(null);\n    this.collectionRef = this.afs.collection(this.table);\n  }\n\n  /**\n   * get multiple documents\n   * @return Observable\n   */\n  getDocuments(): Observable<any[]> {\n    return this.documents$.pipe(\n      map((documents) => {\n        return documents.map((document: DocumentChangeAction<any>) => {\n          if (document.payload.doc.exists) {\n            const doc = document.payload.doc.data() as Document;\n            doc.key = document.payload.doc.id;\n            return doc;\n          }\n        });\n      }));\n  }\n\n  /**\n   * get snapshot change with state, from action\n   */\n  private getDocPayload(path: string): Observable<any> {\n    return this.document$ = this.collectionRef\n      .doc(path)\n      .snapshotChanges()\n      .pipe(\n        map((action: Action<DocumentSnapshot<DocumentReference>>) => {\n          if (action.payload.exists) {\n            const product = action.payload.data() as Document;\n            product.key = action.payload.id;\n            return product;\n          }\n          return null;\n        }));\n  }\n\n  /**\n   * get a single document\n   */\n  getDocument(key: null | string): Observable<Document> {\n    if (key) {\n      return this.getDocPayload(key);\n    }\n    return of(null);\n  }\n\n  /**\n   * Update a document\n   */\n  updateDocument(document: Document): Promise<void> {\n    return this.collectionRef.doc(document.key).update({...document});\n  }\n\n  /**\n   * create a Document\n   */\n  createDocument(document: any): Promise<DocumentReference> {\n    return this.collectionRef.add(document);\n  }\n\n  /**\n   * Delete a document\n   */\n  deleteDocument(document: Document): Promise<void> {\n    return this.collectionRef.doc(document.key).delete();\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { VisitorService } from '../firebase/visitor.service';\nimport { Event } from './event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService extends VisitorService {\n\n  constructor(afs: AngularFirestore, @Inject('TABLE_EVENT') table: string) {\n    super(afs, table);\n  }\n\n  getEvents(): Observable<Event[]> {\n    return super.getDocuments() as Observable<Event[]>;\n  }\n\n  getEvent(key: string): Observable<Event> {\n    return super.getDocument(key) as Observable<Event>;\n  }\n\n  createEvent(event: Event): Promise<any> {\n    return super.createDocument(event);\n  }\n\n  updateEvent(event: Event) {\n    return super.updateDocument(event);\n  }\n\n  deleteEvent(event: Event) {\n    return super.deleteDocument(event);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { VisitorService } from '../firebase/visitor.service';\nimport { Session } from './session';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService extends VisitorService {\n\n  constructor(afs: AngularFirestore, @Inject('TABLE_SESSION') table: string) {\n    super(afs, table);\n  }\n\n  getSessions(): Observable<Session[]> {\n    return super.getDocuments() as Observable<Session[]>;\n  }\n\n  getSession(key: string): Observable<Session> {\n    return super.getDocument(key) as Observable<Session>;\n  }\n\n  createSession(session: Session): Promise<any> {\n    return super.createDocument(session);\n  }\n\n  updateSession(session: Session) {\n    return super.updateDocument(session);\n  }\n\n  deleteSession(session: Session) {\n    return super.deleteDocument(session);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChildren\n} from '@angular/core';\nimport * as moment_ from 'moment';\nimport { Moment } from 'moment';\nimport { Twix, TwixIter } from 'twix';\nimport 'twix';\nimport { Day } from '../shared/day/day';\nimport { EventService } from '../shared/event/event.service';\nimport { OnlineSession } from '../shared/session/online-session';\nimport { Session } from '../shared/session/session';\nimport { Event } from '../shared/event/event';\nimport { SessionService } from '../shared/session/session.service';\n\nconst moment = moment_;\n\n@Component({\n  // tslint:disable\n  selector: 'ngx-calendar',\n  // tslint:enable\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss']\n})\nexport class CalendarComponent implements OnInit, OnChanges {\n  // Default View Mode of Week Component\n  _viewMode: String = 'week';\n\n  @Input() onlineSession: OnlineSession;\n  @Input() start: Moment = moment();\n  @Input() end: Moment = moment();\n  @Input() slotDuration = 15;\n\n  calendarStart: Moment;\n  calendarEnd: Moment;\n  @Output() viewModeChanged: EventEmitter<String> = new EventEmitter<String>();\n  @Output() sessionCreated: EventEmitter<Session> = new EventEmitter<Session>();\n\n  @Output() sessionRemoved: EventEmitter<Session> = new EventEmitter<Session>();\n\n  @ViewChildren('dayList') el: ElementRef;\n  days: Array<Day> = [];\n\n  trueDuration: number;\n  daysAvailability: Map<string, string[]>;\n  daysBusySlotNumber: Map<string, number>;\n\n  daysAvailabilitySlotNumber: Map<string, number>;\n  events: Event[];\n  busySlots: Set<string>;\n  earlySlots: Set<string>;\n  pauseSlots: Set<string>;\n  sessionsSlots: Set<string>;\n  sessionsEndSlots: Set<string>;\n  sessions: Map<string, Session>;\n\n  static splitRangeToNextTime(slotTimeRange: TwixIter, slotDuration: number): {time: Twix, mmtTime: Moment} {\n    const time: Twix = slotTimeRange.next();\n    return {time: time, mmtTime: CalendarComponent.getMinutesDifference(moment(time.toDate()), slotDuration)};\n  }\n\n  static getMinutesDifference(mmtTime: Moment, slotDuration: number): Moment {\n    if (mmtTime.minutes() % slotDuration !== 0) {\n      mmtTime.minutes(mmtTime.minutes() - (mmtTime.minutes() % slotDuration));\n    }\n\n    return mmtTime;\n  }\n\n  constructor(private eventService: EventService,\n              private sessionService: SessionService,\n              private cd: ChangeDetectorRef,\n              private rd: Renderer2) {\n  }\n\n  ngOnInit() {\n    this.setCalendar();\n    this.setDateRange();\n  }\n\n  @Input() set viewMode(viewMode) {\n    this._viewMode = viewMode;\n    this.setViewMode();\n  }\n\n  get viewMode(): String {\n    return this._viewMode;\n  }\n\n  /**\n   * Inspect all changes\n   */\n  ngOnChanges() {\n    this.setDateRange();\n  }\n\n  /**\n   * Set Default variables\n   */\n  setCalendar() {\n    this.onlineSession = {\n      key: 'test1',\n      session_type: {\n        name: 'test1',\n        max_persons: 1,\n        booking_delay: 1,\n        duration: 60,\n        pause: 0,\n      },\n      prices: [10, 20],\n      date_range: {\n        start: '2018-01-01',\n        end: '2019-12-31',\n      },\n      time_range: {\n        start: '08:00',\n        end: '19:00',\n      }\n    };\n    this.sessionsSlots = new Set();\n    this.sessionsEndSlots = new Set();\n    this.earlySlots = new Set();\n    this.pauseSlots = new Set();\n    this.sessions = new Map();\n  }\n\n  /**\n   * Set View Mode with week, day, 3 days\n   * Init start, end,\n   *\n   */\n  setViewMode() {\n    if (this.viewMode === 'day') {\n      this.end = this.start;\n      this.calendarStart = moment(this.start).startOf('day');\n      this.calendarEnd = moment(this.end).endOf('day');\n      return;\n    } else if (this.viewMode === '3days') {\n      this.end = moment(this.start).add(2, 'days');\n      this.calendarStart = moment(this.start).startOf('day');\n      this.calendarEnd = moment(this.end).endOf('day');\n      return;\n    }\n    // Init first day week number\n    const firstDay = 0;\n    // If empty start date then start to today\n    if (!this.start) {\n      this.start = moment();\n    }\n    this.start = moment(this.start).day(firstDay);\n    this.end = moment(this.start).add(6, 'days');\n\n    this.calendarStart = moment(this.start).startOf('day');\n    this.calendarEnd = moment(this.end).endOf('day');\n  }\n\n  /**\n   * On start/viewMode changed, do a recalculate of init start, end\n   * days, daysAvailability and viewMode\n   */\n  setDateRange() {\n    this.setCalendar();\n    this.setViewMode();\n    // this.buildTrueDuration();\n    this.loadEvents(this.start, this.end);\n    this.daysAvailability = new Map();\n    const dateRange: TwixIter = this.start\n      .twix(this.end)\n      .iterate(1, 'days');\n    this.days = [];\n    // Loading all days\n    while (dateRange.hasNext()) {\n      const date: Twix = dateRange.next();\n      this.days.push({\n        title: date.format('DD/MM/YYYY'),\n        key: date.format('YYYY-MM-DD'),\n        value: moment(date.toDate())\n      });\n      this.daysAvailability.set(date.format('YYYY-MM-DD'), []);\n    }\n    this.loadAvailabilities();\n  }\n\n  /**\n   * On switch date range\n   */\n  onSwithedView(viewMode: String) {\n    this.viewModeChanged.emit(viewMode);\n    this.setDateRange();\n  }\n\n  /**\n   * On start change event\n   */\n  onStartChanged(start: Moment) {\n    this.start = start;\n    this.setDateRange();\n  }\n\n  /**\n   * On session added on click event\n   */\n  onSessionAdded(session: Session) {\n    this.sessions.set(moment(session.start).format('YYYY-MM-DDHH:mm'), session);\n    this.addSession(session);\n    this.sessionCreated.emit(session);\n  }\n\n  /**\n   * On removed event\n   */\n  onSessionRemoved(source: {key: string, session: Session}) {\n    this.sessions.delete(source.key);\n    this.removeSession(source.session);\n    this.sessionRemoved.emit(source.session);\n  }\n\n  /**\n   * Load all time for each days\n   */\n  loadAvailabilities() {\n    // no online session no calendar\n    if (!this.daysAvailability || !this.onlineSession) {\n      return;\n    }\n    // session duration\n    const duration = this.onlineSession.session_type.duration;\n    // session day start 00:00 - end 23:59\n    const onlineSessionStart: Moment = moment(this.onlineSession.date_range.start, 'YYYY-MM-DD').startOf('day');\n    const onlineSessionEnd: Moment = moment(this.onlineSession.date_range.end, 'YYYY-MM-DD').endOf('day');\n    this.daysAvailabilitySlotNumber = new Map();\n    this.daysAvailability.forEach((avbs, day) => {\n      let slotsNumber = 0;\n      // each day of days availability with start time 08:00\n      const mmtDay = moment(day, 'YYYY-MM-DD').hour(8);\n      const mmtDayStartTime = moment(day + this.onlineSession.time_range.start, 'YYYY-MMDDHH:mm');\n\n      // If session start time like 08:00 is before start today 00:00\n      if (mmtDayStartTime.isBefore(moment().startOf('day'))) {\n        return;\n      }\n      // booking delay\n      const minMmtStartTime = moment().add(this.onlineSession.session_type.booking_delay, 'hours');\n      // session time end\n      const mmtDayEndTime = moment(day + this.onlineSession.time_range.end, 'YYYY-MM-DDHH:mm');\n      mmtDayEndTime.subtract(duration, 'minutes');\n      // slots iterator\n      const timeRange: TwixIter = mmtDayStartTime.twix(mmtDayEndTime).iterate(this.slotDuration, 'minutes');\n      if (this.calendarStart && this.calendarEnd && mmtDay.isBetween(onlineSessionStart, onlineSessionEnd)) {\n        while (timeRange.hasNext()) {\n          const time: Twix = timeRange.next();\n          const timeMmt: Moment = moment(time.toDate());\n          if (!timeMmt.isBefore(minMmtStartTime)) {\n            avbs.push(time.format('HH:mm'));\n            slotsNumber++;\n          }\n        }\n      }\n      this.daysAvailabilitySlotNumber.set(day, slotsNumber);\n    });\n  }\n\n  /**\n   * Add session event in calendar\n   */\n  addSession(session: Session) {\n    const mmtStart = moment(session.start);\n    const mmtEnd = moment(session.end);\n    const timeInnerRange: TwixIter = mmtStart.twix(mmtEnd).iterateInner(this.slotDuration, 'minutes');\n    while (timeInnerRange.hasNext()) {\n      const time: Twix = timeInnerRange.next();\n      this.sessionsSlots.add(time.format('YYYY-MM-DDHH:mm'));\n      if (!timeInnerRange.hasNext()) {\n        this.sessionsEndSlots.add(time.format('YYYY-MM-DDHH:mm'));\n      }\n    }\n    /* building earliest slot before event */\n    const mmtEarlyStart = mmtStart.clone().subtract(this.trueDuration, 'minutes');\n    mmtEarlyStart.minutes(mmtEarlyStart.minutes() - (mmtEarlyStart.minutes() % this.slotDuration) + this.slotDuration);\n    const timeEarlierRange: TwixIter = mmtEarlyStart.twix(mmtStart).iterate(this.slotDuration, 'minutes');\n    while (timeEarlierRange.hasNext()) {\n      const time: Twix = timeEarlierRange.next();\n      const mmtTime: Moment = CalendarComponent.getMinutesDifference(moment(time.toDate()), this.slotDuration);\n      if (mmtTime.isSameOrAfter(mmtEarlyStart) && mmtTime.isBefore(mmtStart)) {\n        this.earlySlots.add(mmtTime.format('YYYY-MM-DDHH:mm'));\n      }\n    }\n    /* building pause slots after event */\n    const mmtEarlyEnd = mmtEnd.clone();\n    mmtEarlyEnd.subtract(mmtEarlyEnd.minutes() % this.slotDuration);\n    const mmtPauseEnd = mmtEarlyEnd.clone().add(this.onlineSession.session_type.pause, 'minutes');\n    const timePauseRange: TwixIter = mmtEarlyEnd.twix(mmtPauseEnd).iterate(this.slotDuration, 'minutes');\n    while (timePauseRange.hasNext()) {\n      const time: Twix = timePauseRange.next();\n      const mmtTime: Moment = CalendarComponent.getMinutesDifference(moment(time.toDate()), this.slotDuration);\n      if (mmtTime.isSameOrAfter(mmtEarlyEnd) && mmtTime.isBefore(mmtPauseEnd)) {\n        this.pauseSlots.add(mmtTime.format('YYYY-MM-DDHH:mm'));\n      }\n    }\n  }\n\n  /**\n   * Remove session event in Calendar\n   */\n  removeSession(session: Session) {\n    const mmtStart = moment(session.start);\n    const mmtEnd = moment(session.end);\n    const timeInnerRange: TwixIter = mmtStart.twix(mmtEnd).iterate(this.slotDuration, 'minutes');\n    while (timeInnerRange.hasNext()) {\n      const time: Twix = timeInnerRange.next();\n      this.sessionsSlots.delete(time.format('YYYY-MM-DDHH:mm'));\n      if (!timeInnerRange.hasNext()) {\n        this.sessionsEndSlots.delete(time.format('YYYY-MM-DDHH:mm'));\n      }\n    }\n    /* removing early slots */\n    const mmtEarlyStart = mmtStart.clone().subtract(this.trueDuration, 'minutes');\n    mmtEarlyStart.minutes(mmtEarlyStart.minutes() - (mmtEarlyStart.minutes() % this.slotDuration) + this.slotDuration);\n    const timeEarlyRange: TwixIter = mmtEarlyStart.twix(mmtStart).iterate(this.slotDuration, 'minutes');\n    while (timeEarlyRange.hasNext()) {\n      const time: Twix = timeEarlyRange.next();\n      const mmtTime: Moment = CalendarComponent.getMinutesDifference(moment(time.toDate()), this.slotDuration);\n      if (mmtTime.isSameOrAfter(mmtEarlyStart) && mmtTime.isBefore(mmtStart)) {\n        this.earlySlots.delete(mmtTime.format('YYYY-MM-DDHH:mm'));\n      }\n    }\n    /* removing pause slots */\n    if (session.pause) {\n      const mmtEarlyEnd = mmtEnd.clone();\n      mmtEarlyEnd.subtract(mmtEarlyEnd.minutes() % this.slotDuration);\n      const mmtPauseEnd = mmtEarlyEnd.clone().add(session.pause, 'minutes');\n      const timePauseRange: TwixIter = mmtEarlyEnd.twix(mmtPauseEnd).iterate(this.slotDuration, 'minutes');\n      while (timePauseRange.hasNext()) {\n        const time: Twix = timePauseRange.next();\n        const mmtTime: Moment = CalendarComponent.getMinutesDifference(moment(time.toDate()), this.slotDuration);\n        if (mmtTime.isSameOrAfter(mmtEarlyEnd) && mmtTime.isBefore(mmtPauseEnd)) {\n          this.pauseSlots.delete(mmtTime.format('YYYY-MM-DDHH:mm'));\n        }\n      }\n    }\n  }\n\n  /************************************************\n   ******************* Date functions **************\n   *************************************************/\n\n  loadEvents(start: Moment, end: Moment) {\n    this.sessionService.filters$.next([\n      {\n        column: 'start',\n        operator: '>=',\n        value: moment(start).toDate()\n      }\n    ]);\n    this.sessionService.getSessions()\n      .subscribe((events: Session[]) => {\n        this.events = [...events.filter((event) => event && event.end <= end.toDate())];\n        this.busySlots = new Set();\n        this.daysBusySlotNumber = new Map();\n\n        this.events.forEach((event: Event) => {\n          let mmtEventStart = moment(event.start, 'YYYY-MM-DDHH:mm');\n          mmtEventStart = this.buildinBusySlot(mmtEventStart, event);\n          this.buildingEarliestSlot(mmtEventStart);\n        });\n\n        this.cd.markForCheck();\n      });\n  }\n\n  buildinBusySlot(mmtEventStart: Moment, event: Event): Moment {\n    const mmtEventEnd = moment(event.end, 'YYYY-MM-DDHH:mm');\n    if (!mmtEventStart || !mmtEventStart.isValid()\n      || !mmtEventEnd || !mmtEventEnd.isValid()\n      || !mmtEventStart.isBefore(mmtEventEnd)) {\n      console.error('invalid dates');\n      return null;\n    }\n    /* building busy slots by events*/\n    const eventsTimeRange: TwixIter = mmtEventStart.twix(mmtEventEnd).iterate(this.slotDuration, 'minutes');\n    while (eventsTimeRange.hasNext()) {\n      const {time, mmtTime} = CalendarComponent.splitRangeToNextTime(eventsTimeRange, this.slotDuration);\n      /* IF the busy slot is in availability and not already in busySloits we count it */\n      if (this.daysAvailability && this.daysAvailability.has(time.format('YYYY-MM-DD'))\n        && !this.busySlots.has(time.format('YYYY-MM-DDHH:mm'))\n        && this.daysAvailability.get(time.format('YYYY-MM-DD')).indexOf(time.format('HH:mm')) >= 0) {\n        let dayBusyNumber = this.daysBusySlotNumber.has(time.format('YYYY-MM-DD')) ?\n          this.daysBusySlotNumber.get(time.format('YYYY-MM-DD')) : 0;\n        dayBusyNumber++;\n        this.daysBusySlotNumber.set(time.format('YYYY-MM-DD'), dayBusyNumber);\n      }\n      this.busySlots.add(time.format('YYYY-MM-DDHH:mm'));\n    }\n\n    return mmtEventStart;\n  }\n\n  buildingEarliestSlot(mmtEventStart: Moment) {\n    /* building earliest slot before event */\n    const mmtEarlyStart = mmtEventStart.clone().subtract(this.trueDuration, 'minutes');\n    mmtEarlyStart.minutes(mmtEarlyStart.minutes() -\n      (mmtEarlyStart.minutes() % this.slotDuration) + this.slotDuration);\n    const earliestTimeRange: TwixIter = mmtEarlyStart.twix(mmtEventStart).iterate(this.slotDuration, 'minutes');\n    while (earliestTimeRange.hasNext()) {\n      const {time, mmtTime} = CalendarComponent.splitRangeToNextTime(earliestTimeRange, this.slotDuration);\n      /* IF the busy slot is in availability and not already in busySloits we count it */\n      if (this.daysAvailability && this.daysAvailability.has(time.format('YYYY-MM-DD'))\n        && !this.busySlots.has(time.format('YYYY-MM-DDHH:mm'))\n        && this.daysAvailability.get(time.format('YYYY-MM-DD')).indexOf(time.format('HH:mm')) >= 0) {\n        let dayBusyNumber = this.daysBusySlotNumber.has(time.format('YYYY-MM-DD')) ?\n          this.daysBusySlotNumber.get(time.format('YYYY-MM-DD')) : 0;\n        dayBusyNumber++;\n        this.daysBusySlotNumber.set(time.format('YYYY-MM-DD'), dayBusyNumber);\n      }\n      this.busySlots.add(time.format('YYYY-MM-DDHH:mm'));\n    }\n  }\n}\n","import { NavigationEnd, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoutingState {\n  private history = [];\n\n  constructor(private router: Router) {\n  }\n\n  public loadRouting(): void {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(({urlAfterRedirects}: NavigationEnd) => {\n        this.history = [...this.history, urlAfterRedirects];\n      });\n  }\n\n  public getHistory(): string[] {\n    return this.history;\n  }\n\n  public getPreviousUrl(): string {\n    return this.history[this.history.length - 2] || '/';\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatIconModule,\n  MatTableModule,\n  MatTooltipModule\n} from '@angular/material';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CalendarBodyComponent } from './calendar/calendar-body/calendar-body.component';\nimport { CalendarHeaderComponent } from './calendar/calendar-header/calendar-header.component';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { EventService } from './shared/event/event.service';\nimport { SessionService } from './shared/session/session.service';\nimport { AlertService } from './shared/util/alert.service';\nimport { RoutingState } from './shared/util/routing-state';\n\nexport const TABLE_EVENT = new InjectionToken<string>('event');\nexport const TABLE_SESSION = new InjectionToken<string>('session');\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatIconModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [\n    CalendarComponent,\n    CalendarHeaderComponent,\n    CalendarBodyComponent,\n  ],\n  exports: [\n    CalendarComponent,\n    CalendarHeaderComponent,\n    CalendarBodyComponent,\n  ],\n  providers: [\n    AlertService,\n    RoutingState,\n    {provide: TABLE_SESSION, useValue: 'session'},\n    {provide: TABLE_EVENT, useValue: 'event'},\n    {provide: EventService, useClass: EventService, deps: [AngularFirestore, TABLE_EVENT]},\n    {provide: SessionService, useClass: SessionService, deps: [AngularFirestore, TABLE_SESSION]},\n  ]\n})\nexport class NgxCalendarModule {\n}\n","import { EventType, Event } from '../../shared/event/event';\n\nexport class Session extends Event {\n  details: {\n    event_type: EventType,\n    nb_persons: number,\n    booking?: any;\n    info: string;\n    // age?: Parameter;\n    // level?: Parameter;\n    // sport: Sport;\n    // speciality?: Sport;\n    // city: City;\n    // meeting_point?: MeetingPoint;\n    customers?: string[];\n  };\n}\n"],"names":["moment","filter","__extends"],"mappings":"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"}
